{"version":3,"sources":["App/toGeoJson.ts","App/setCluster.ts","App/Links.tsx","App/distance-label.ts","App/Shop.tsx","App/Map.tsx","App/Home.tsx","App/ShopListItem.tsx","App/List.tsx","geolocation.ts","App/AboutUs.tsx","App/Category.tsx","App/Images.tsx","App/Tabbar.tsx","lib/zen2han.ts","lib/table2json.ts","App.tsx","Qrcode.tsx","About.tsx","Container.tsx","serviceWorkerRegistration.ts","index.tsx"],"names":["toGeoJson","data","geojson","type","features","id","item","feature","geometry","coordinates","Number","properties","_id","i","Object","keys","length","key","push","setCluster","map","addLayer","source","filter","paint","layout","on","e","queryRenderedFeatures","point","layers","clusterId","cluster_id","getSource","getClusterExpansionZoom","err","zoom","easeTo","center","getCanvas","style","cursor","noop","stopPropagation","Content","props","className","href","onClick","size","makeDistanceLabelText","distance","distanceTipText","isNaN","Math","round","mapNode","React","useRef","useState","setMap","shop","clickHandler","close","current","remove","useEffect","nextMap","window","geolonia","Map","container","interactive","text","category","content","color","to","margin","src","alt","width","wordBreak","split","line","result","undefined","ref","height","marginTop","CSS","position","hidePoiLayers","hideLayers","layerId","setLayoutProperty","parseHash","url","qstr","location","hash","substring","URLSearchParams","mapObject","setMapObject","setShop","zLatLngString","setZLatLngString","addSource","cluster","clusterMaxZoom","clusterRadius","forEach","console","log","layer_id","symbol","getLayer","event","addMarkers","q","set","toString","replace","bounds","geojsonExtent","fitBoundsOptions","padding","get","zlatlng","lat","lng","flyTo","fitBounds","onMapLoad","getCenter","rawZoom","getZoom","precision","ceil","LN2","LN10","m","pow","zStr","orienteationchangeHandler","resize","addEventListener","removeEventListener","off","popupHandler","image","isCategoryPage","queryCategory","sortShopList","shopList","a","Promise","resolve","reject","navigator","geolocation","getCurrentPosition","pos","coords","latitude","longitude","error","enableHighAccuracy","timeout","maximumAge","currentPosition","from","turf","sortingShopList","parseFloat","units","sort","b","setData","list","setList","page","setPage","hasMore","setHasMore","useSearchParams","isMounted","process","REACT_APP_ORDERBY","then","sortedData","slice","loader","textAlign","top","dataLength","next","scrollableTarget","index","target","rel","navigate","useNavigate","categoryList","setCategoryList","categories","indexOf","htmlFor","onChange","value","options","label","validImageList","setValidImageList","imageListItems","ImageListItem","loading","onError","parentNode","ImageList","sx","cols","rowHeight","zen2han","str","s","String","fromCharCode","charCodeAt","table2json","table","header","record","reduce","prev","column","item1","item2","Date","parse","App","setShopList","fetch","getTime","response","ok","status","fetchedData","JSON","values","nextShopList","match","sortedShopList","path","element","Home","Qrcode","Canvas","useQRCode","logoUrl","config","logo_image_url","description","isLocalhost","Boolean","hostname","registerValidSW","swUrl","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","onUpdate","onSuccess","catch","ReactDOM","render","StrictMode","document","getElementById","URL","origin","headers","contentType","ready","unregister","reload","checkValidServiceWorker","serviceWorkerRegistration"],"mappings":"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","file":"static/js/main.3c61164b.chunk.js","sourcesContent":["type Geometry = {\n  type: string;\n  coordinates: number[]\n}\n\ntype featureProperties = {\n  [key: string]: string;\n}\n\ntype Feature = {\n  type: string;\n  geometry: Geometry;\n  properties: featureProperties\n}\n\ntype itemObject = {\n  [key: string]: any;\n}\n\ntype GeoJSON = {\n  type: string;\n  features: Feature[]\n}\n\nconst toGeoJson = (data: any) => {\n  const geojson = {\n    type: \"FeatureCollection\",\n    features: []\n  } as GeoJSON\n\n  for (const id in data) {\n    const item = data[id] as itemObject\n\n    if (!item['経度'] || !item['緯度'] || !item['スポット名']) {\n      return;\n    }\n\n    const feature = {\n      type: \"Feature\",\n      geometry: {\n        type: \"Point\",\n        coordinates: [Number(item['経度']), Number(item['緯度'])]\n      },\n      properties: {_id: id}\n    } as Feature\n\n    for (let i = 0; i < Object.keys(item).length; i++) {\n      const key = Object.keys(item)[i]\n      feature.properties[key] = item[key]\n    }\n\n    geojson.features.push(feature)\n  }\n\n  return geojson\n}\n\nexport default toGeoJson;\n","const setCluster = (map: any) => {\n  map.addLayer({\n    id: 'clusters',\n    type: 'circle',\n    source: 'shops',\n    filter: ['any',\n      ['has', 'point_count'],\n    ],\n    paint: {\n      'circle-radius': 20,\n      'circle-color': '#6F8E61',\n      'circle-opacity': 1.0,\n    },\n  })\n\n  map.addLayer({\n    id: 'cluster-count',\n    type: 'symbol',\n    source: 'shops',\n    filter: ['any',\n      ['has', 'point_count'],\n    ],\n    paint: {\n      'text-color': '#FFFFFF',\n    },\n    layout: {\n      'text-field': '{point_count_abbreviated}',\n      'text-size': 12,\n      'text-font': ['Noto Sans Regular'],\n    },\n  })\n\n  map.on('click', 'clusters', (e: any) => {\n    const features = map.queryRenderedFeatures(e.point, { layers: ['clusters'] })\n    const clusterId = features[0].properties.cluster_id\n    map.getSource('shops').getClusterExpansionZoom(clusterId, (err: any, zoom: number) => {\n      if (err)\n        return\n\n      map.easeTo({\n        center: features[0].geometry.coordinates,\n        zoom: zoom,\n      })\n    })\n  })\n\n  map.on('mouseenter', 'clusters', function () {\n    map.getCanvas().style.cursor = 'pointer'\n  })\n\n  map.on('mouseleave', 'clusters', function () {\n    map.getCanvas().style.cursor = ''\n  })\n}\n\nexport default setCluster;\n","import React from \"react\";\n// import { FaTwitter, FaInstagram, FaHome } from 'react-icons/fa';\nimport { FaHome } from 'react-icons/fa';\n\nimport './Links.scss'\n\ntype Props = {\n  data: Pwamap.ShopData;\n};\n\nconst noop = (e: React.MouseEvent) => {\n  e.stopPropagation()\n}\n\nconst Content = (props: Props) => {\n\n  return (\n    <div className=\"links\">\n      {props.data['公式サイト']?<div className=\"link\"><a href={props.data['公式サイト']}><FaHome onClick={noop} size=\"20px\" /></a></div>:''}\n    </div>\n  );\n};\n\nexport default Content;\n","export const makeDistanceLabelText = (distance: number | void) => {\n  let distanceTipText = \"\"\n  if(typeof distance === 'number' && !Number.isNaN(distance)) {\n    if(distance > 1000) {\n      distanceTipText = Math.round(distance / 1000) + ' km'\n    } else {\n      distanceTipText = Math.round(distance) + ' m'\n    }\n  }\n  return distanceTipText\n}\n","import React from \"react\";\nimport Links from './Links'\nimport './Shop.scss'\nimport { AiOutlineClose } from 'react-icons/ai'\nimport { Link } from \"react-router-dom\";\nimport { makeDistanceLabelText } from \"./distance-label\";\n\ntype Props = {\n  shop: Pwamap.ShopData;\n  close: Function;\n}\n\nconst Content = (props: Props) => {\n  const mapNode = React.useRef<HTMLDivElement>(null);\n  const [map, setMap] = React.useState<any>(null)\n  const { shop } = props\n\n  const clickHandler = () => {\n    props.close()\n    if(mapNode.current) {\n      mapNode.current.remove()\n      map.remove()\n    }\n  }\n\n  React.useEffect(() => {\n    if (!mapNode.current) {\n      return\n    }\n\n    // @ts-ignore\n    const nextMap = new window.geolonia.Map({\n      container: mapNode.current,\n      interactive: false,\n      zoom: 14,\n      style: `geolonia/gsi`,\n    });\n    setMap(nextMap)\n  }, [shop, mapNode])\n\n  const distanceTipText = makeDistanceLabelText(shop.distance)\n  const category = shop['カテゴリ']\n  const content = shop['紹介文']\n\n  const toBreakLine = (text: string) => {\n\n    return text.split(/(\\r\\n)|(\\n)|(\\r)/g).map((line, i) => {\n\n      let result: any = '';\n\n      if (line === '\\r\\n' || line === '\\n' || line === '\\r') {\n        result = <br key={i} />\n      } else if (line !== undefined) {\n        result = line\n      }\n\n      return result\n    })\n  }\n\n  return (\n    <div className=\"shop-single\">\n      <div className=\"head\">\n        <button onClick={clickHandler}><AiOutlineClose size=\"16px\" color=\"#FFFFFF\" /> 閉じる</button>\n      </div>\n      <div className=\"container\">\n        {shop?\n          <>\n            <h2>{shop['スポット名']}</h2>\n            <div>\n              <span className=\"nowrap\">\n                <Link to={`/list?category=${category}`}>\n                  <span onClick={clickHandler} className=\"category\">{category}</span>\n                </Link>\n              </span>\n              <span className=\"nowrap\">{distanceTipText && <span className=\"distance\">現在位置から {distanceTipText}</span> }</span>\n            </div>\n\n            <div style={{margin: \"24px 0\"}}><Links data={shop} /></div>\n\n            { shop['画像'] && <img src={shop['画像']} alt={shop['スポット名']} style={{width: \"100%\"}} />}\n            { (shop['カテゴリ'] === \"センキョ割実施店舗\") &&\n              <p>\n                センキョ割内容:<br/>\n                {shop['Twitter']}\n              </p>\n            }\n\n            <p style={{margin: \"24px 0\", wordBreak: \"break-all\"}}>{toBreakLine(content)}</p>\n\n            <div\n              ref={mapNode}\n              style={{width: '100%', height: '200px', marginTop: \"24px\"}}\n              data-lat={shop['緯度']}\n              data-lng={shop['経度']}\n              data-navigation-control=\"off\"\n            ></div>\n\n            <p><a className=\"small\" href={`http://maps.apple.com/?q=${shop['緯度']},${shop['経度']}`}>スポットまでの道順</a></p>\n\n          </>\n          :\n          <></>\n        }\n      </div>\n    </div>\n  );\n};\n\nexport default Content;\n","import React from \"react\";\n// @ts-ignore\nimport geojsonExtent from '@mapbox/geojson-extent'\nimport toGeoJson from './toGeoJson'\nimport setCluster from './setCluster'\nimport Shop from './Shop'\n\ntype Props = {\n  data: Pwamap.ShopData[];\n};\n\nconst CSS: React.CSSProperties = {\n  width: '100%',\n  height: '100%',\n  position: 'relative',\n}\n\nconst hidePoiLayers = (map: any) => {\n\n  const hideLayers = [\n    'poi',\n    'poi-primary',\n    'poi-r0-r9',\n    'poi-r10-r24',\n    'poi-r25',\n    'poi-bus',\n    'poi-entrance',\n  ]\n\n  for (let i = 0; i < hideLayers.length; i++) {\n    const layerId = hideLayers[i];\n    map.setLayoutProperty(layerId, 'visibility', 'none')\n  }\n}\n\nconst parseHash = (url?: Location | URL) => {\n  const qstr = (url || window.location).hash.substring(2);\n  const q = new URLSearchParams(qstr);\n  return q;\n};\n\nconst updateHash = (q: URLSearchParams) => {\n\n  const hash = q.toString();\n  if (hash) {\n    window.location.hash = `#/?${q.toString().replace(/%2F/g, '/')}`;\n  }\n};\n\nconst Content = (props: Props) => {\n  const mapNode = React.useRef<HTMLDivElement>(null);\n  const [mapObject, setMapObject] = React.useState<any>()\n  const [shop, setShop] = React.useState<Pwamap.ShopData | undefined>(undefined)\n  const [ zLatLngString, setZLatLngString ] = React.useState<string>('');\n\n  const addMarkers = (mapObject: any, data: any) => {\n\n    if (!mapObject || !data) {\n      return\n    }\n\n    mapObject.on('render', () => {\n\n      // nothing to do if shops exists.\n      if (mapObject.getSource('shops')) {\n        return\n      }\n\n      hidePoiLayers(mapObject)\n\n      const textColor = '#000000'\n      const textHaloColor = '#FFFFFF'\n\n      const geojson: any = toGeoJson(data)\n\n      mapObject.addSource('shops', {\n        type: 'geojson',\n        data: geojson,\n        cluster: true,\n        clusterMaxZoom: 14,\n        clusterRadius: 25,\n      })\n\n      geojson.features.forEach(function (feature: any) {\n        let category:string = feature.properties['カテゴリ'];\n        console.log(category)\n        let layer_id: string = \"\";\n        let symbol: string = 'commercial';\n        if (category === \"センキョ割実施店舗\") {\n          layer_id = 'poi-shop';\n          symbol = 'commercial';\n        } else if (category === \"期日前投票所\") {\n          layer_id = 'poi-early-voting-station';\n          symbol = 'town_hall';\n        } else if (category === \"投票所\") {\n          layer_id = 'poi-voting-station';\n          symbol = 'monument';\n        } else if (category === \"ポスター掲示場設置場所\") {\n          layer_id = 'poi-poster-location';\n          symbol = 'amusement_park';\n        } else {\n          layer_id = \"\";\n          symbol = \"\";\n        }\n        // Add a layer for this symbol type if it hasn't been added already.\n        if (!mapObject.getLayer(layer_id)) {\n          mapObject.addLayer({\n            'id': layer_id,\n            'type': 'symbol',\n            source: 'shops',\n            filter: ['==', \"カテゴリ\", category],\n            'layout': {\n              'icon-image': symbol,\n              'icon-overlap': 'always',\n              'icon-size': 1.7\n            },\n          });\n\n          mapObject.on('mouseenter', layer_id, () => {\n            mapObject.getCanvas().style.cursor = 'pointer'\n          })\n    \n          mapObject.on('mouseleave', layer_id, () => {\n            mapObject.getCanvas().style.cursor = ''\n          })\n    \n          mapObject.on('click', layer_id, (event: any) => {\n            if (!event.features[0].properties.cluster) {\n              setShop(event.features[0].properties)\n            }\n          })    \n        }\n      });\n\n      mapObject.addLayer({\n        id: 'shop-symbol',\n        type: 'symbol',\n        source: 'shops',\n        filter: ['all',\n          ['==', '$type', 'Point'],\n        ],\n        paint: {\n          'text-color': textColor,\n          'text-halo-color': textHaloColor,\n          'text-halo-width': 2,\n        },\n        layout: {\n          'text-field': \"{スポット名}\",\n          'text-font': ['Noto Sans Regular'],\n          'text-variable-anchor': ['top', 'bottom', 'left', 'right'],\n          'text-radial-offset': 0.5,\n          'text-justify': 'auto',\n          'text-size': 12,\n          'text-anchor': 'top',\n          'text-max-width': 12,\n          'text-allow-overlap': false,\n        },\n      })\n\n      // shop-symbol\n      mapObject.on('mouseenter', 'shop-symbol', () => {\n        mapObject.getCanvas().style.cursor = 'pointer'\n      })\n\n      mapObject.on('mouseleave', 'shop-symbol', () => {\n        mapObject.getCanvas().style.cursor = ''\n      })\n\n      mapObject.on('click', 'shop-symbol', (event: any) => {\n        if (!event.features[0].properties.cluster) {\n          setShop(event.features[0].properties)\n        }\n      })\n\n      setCluster(mapObject)\n\n    });\n\n  }\n\n  React.useEffect(() => {\n\n    addMarkers(mapObject, props.data)\n\n  }, [mapObject, props.data])\n\n  React.useEffect(() => {\n    const hash = parseHash();\n    if (zLatLngString) {\n      hash.set('map', zLatLngString);\n    }\n    updateHash(hash);\n\n  }, [ zLatLngString ]);\n\n  React.useEffect(() => {\n    // Only once reder the map.\n    if (!mapNode.current || mapObject) {\n      return\n    }\n\n    // @ts-ignore\n    const { geolonia } = window;\n\n    const geojson = toGeoJson(props.data)\n    const bounds = geojsonExtent(geojson)\n\n    const map = new geolonia.Map({\n      container: mapNode.current,\n      style: 'geolonia/gsi',\n      bounds: bounds,\n      fitBoundsOptions: { padding: 50 },\n    });\n\n    const hash = parseHash();\n    if (hash && hash.get('map')) {\n\n      const latLngString = hash.get('map') || '';\n      const zlatlng = latLngString.split('/');\n\n      const zoom = zlatlng[0]\n      const lat = zlatlng[1]\n      const lng = zlatlng[2]\n\n      map.flyTo({center: [lng, lat], zoom});\n\n    } else if (bounds) {\n\n      map.fitBounds(bounds, { padding: 50 })\n\n    }\n\n    const onMapLoad = () => {\n      hidePoiLayers(map)\n      setMapObject(map)\n\n      map.on('moveend', () => {\n        // see: https://github.com/maplibre/maplibre-gl-js/blob/ba7bfbc846910c5ae848aaeebe4bde6833fc9cdc/src/ui/hash.js#L59\n        const center = map.getCenter(),\n          rawZoom = map.getZoom(),\n          zoom = Math.round(rawZoom * 100) / 100,\n          // derived from equation: 512px * 2^z / 360 / 10^d < 0.5px\n          precision = Math.ceil((zoom * Math.LN2 + Math.log(512 / 360 / 0.5)) / Math.LN10),\n          m = Math.pow(10, precision),\n          lng = Math.round(center.lng * m) / m,\n          lat = Math.round(center.lat * m) / m,\n          zStr = Math.ceil(zoom);\n\n        setZLatLngString(`${zStr}/${lat}/${lng}`);\n      });\n    }\n\n    const orienteationchangeHandler = () => {\n      map.resize()\n    }\n\n    // attach\n    map.on('load', onMapLoad)\n\n    window.addEventListener('orientationchange', orienteationchangeHandler)\n\n    return () => {\n      // detach to prevent memory leak\n      window.removeEventListener('orientationchange', orienteationchangeHandler)\n      map.off('load', onMapLoad)\n    }\n  }, [mapNode, mapObject, props.data])\n\n  const closeHandler = () => {\n    setShop(undefined)\n  }\n\n  return (\n    <div style={CSS}>\n      <div\n        ref={mapNode}\n        style={CSS}\n        data-geolocate-control=\"on\"\n        data-marker=\"off\"\n        data-gesture-handling=\"off\"\n      ></div>\n      {shop ?\n        <Shop shop={shop} close={closeHandler} />\n        :\n        <></>\n      }\n    </div>\n  );\n};\n\nexport default Content;\n","import React from \"react\";\nimport Map from \"./Map\"\n\ntype Props = {\n  data: Pwamap.ShopData[];\n}\n\nconst Content = (props: Props) => {\n  return (\n    <><Map data={props.data} /></>\n  );\n};\n\nexport default Content;\n","import { BsChevronCompactRight } from 'react-icons/bs'\nimport './ShopListItem.scss'\nimport { Link } from \"react-router-dom\";\nimport { makeDistanceLabelText } from \"./distance-label\";\n\ntype Props = {\n  data: Pwamap.ShopData;\n  popupHandler: Function;\n  queryCategory: string | null;\n};\n\nconst Content = (props: Props) => {\n  const clickHandler = () => {\n    props.popupHandler(props.data)\n  }\n\n  const distanceTipText = makeDistanceLabelText(props.data.distance)\n  const category = props.data['カテゴリ']\n  const image = props.data['画像']\n\n  const isCategoryPage = props.queryCategory ? true :false\n\n  return (\n    <>\n      <div className=\"shop-link\">\n        <h2 className=\"shop-title\" style={{ wordBreak: \"break-all\" }} onClick={clickHandler}>{props.data['スポット名']}</h2>\n        <div className='tag-box'>\n          {\n            !isCategoryPage &&\n            <span className=\"nowrap\">\n              <Link to={`/list?category=${category}`}>\n                <span className=\"category\">{category}</span>\n              </Link>\n            </span>\n          }\n          <span className=\"nowrap\">{distanceTipText && <span className=\"distance\">現在位置から {distanceTipText}</span>}</span>\n        </div>\n\n        <div style={{ margin: \"10px 10px 10px 0\" }}>\n\n          { image && <img src={image} alt={props.data['スポット名']} onClick={clickHandler}/>}\n\n        </div>\n\n        <div className=\"right\" onClick={clickHandler}><BsChevronCompactRight size=\"40px\" color=\"#CCCCCC\" /></div>\n      </div>\n    </>\n  );\n};\n\nexport default Content;\n","import React from \"react\";\nimport ShopListItem from './ShopListItem'\nimport Shop from './Shop'\nimport './List.scss'\nimport { useSearchParams } from \"react-router-dom\";\nimport InfiniteScroll from 'react-infinite-scroll-component';\nimport { askGeolocationPermission } from '../geolocation'\nimport * as turf from \"@turf/turf\"\n\ntype Props = {\n  data: Pwamap.ShopData[];\n}\n\nconst sortShopList = async (shopList: Pwamap.ShopData[]) => {\n  const currentPosition = await askGeolocationPermission()\n  if(currentPosition) {\n    const from = turf.point(currentPosition);\n    const sortingShopList = shopList.map((shop) => {\n      const lng = parseFloat(shop['経度'])\n      const lat = parseFloat(shop['緯度'])\n      if(Number.isNaN(lng) || Number.isNaN(lat)) {\n        return shop\n      } else {\n        const to = turf.point([lng, lat])\n        const distance = turf.distance(from, to, {units: 'meters' as 'meters'});\n        return { ...shop, distance }\n      }\n    })\n    sortingShopList.sort((a,b) => {\n      if(typeof a.distance !== 'number' || Number.isNaN(a.distance)) {\n        return 1\n      } else if (typeof b.distance !== 'number' || Number.isNaN(b.distance)) {\n        return -1\n      } else {\n        return a.distance - b.distance\n      }\n    })\n    return sortingShopList\n  } else {\n    return shopList\n  }\n}\n\nconst Content = (props: Props) => {\n\n  const [shop, setShop] = React.useState<Pwamap.ShopData | undefined>()\n  const [data, setData] = React.useState<Pwamap.ShopData[]>(props.data)\n  const [list, setList] = React.useState<any[]>([]);\n  const [page, setPage] = React.useState(10);\n  const [hasMore, setHasMore] = React.useState(true);\n\n  const [searchParams] = useSearchParams();\n  const queryCategory = searchParams.get('category')\n\n  React.useEffect(() => {\n\n    let data = props.data;\n\n    if (queryCategory) {\n      data = props.data.filter((shop) => {\n        return shop['カテゴリ'] === queryCategory\n      })\n    }\n\n    let isMounted = true\n    // prevent memory leak\n    if (isMounted) {\n\n      const orderBy = process.env.REACT_APP_ORDERBY\n\n      if (orderBy === 'distance') {\n\n        sortShopList(data)\n          .then(sortedData => {\n            // prevent memory leak\n            if (isMounted) {\n              setList(sortedData.slice(0, page))\n              setData(sortedData)\n            }\n          })\n\n      } else {\n        setList(data.slice(0, page))\n        setData(data)\n      }\n    }\n\n    return () => {\n      isMounted = false\n    }\n  }, [props.data, queryCategory, page])\n\n\n  const popupHandler = (shop: Pwamap.ShopData) => {\n    if (shop) {\n      setShop(shop)\n    }\n  }\n\n  const closeHandler = () => {\n    setShop(undefined)\n  }\n\n    //項目を読み込むときのコールバック\n    const loadMore = () => {\n\n      //データ件数が0件の場合、処理終了\n      if (list.length >= data.length) {\n        setHasMore(false);\n        return;\n      }\n\n      setList([...list, ...data.slice(page, page + 10)])\n      setPage(page + 10)\n    }\n\n  const loader = <div\n    className=\"loader\"\n    key={0}\n    style={{\n      width: '100%',\n      height: '200px',\n      textAlign: 'center',\n      position: 'relative',\n      top: '100px'\n    }}\n  >場所一覧を読み込み中です...</div>;\n\n  return (\n    <div id=\"shop-list\" className=\"shop-list\">\n      {queryCategory && <div className=\"shop-list-category\">{`カテゴリ：「${queryCategory}」`}</div>}\n\n      <InfiniteScroll\n        dataLength={list.length}\n        next={loadMore}\n        hasMore={hasMore}\n        loader={loader}\n        scrollableTarget=\"shop-list\"\n      >\n        {\n          list.map((item, index) => {\n\n            return (<div key={index} className=\"shop\">\n              <ShopListItem\n                data={item}\n                popupHandler={popupHandler}\n                queryCategory={queryCategory}\n              />\n            </div>)\n\n          })\n        }\n      </InfiniteScroll>\n      {shop ?\n        <Shop shop={shop} close={closeHandler} />\n        :\n        <></>\n      }\n    </div>\n  );\n};\n\nexport default Content;\n","export const askGeolocationPermission = () => {\n  return new Promise<Pwamap.LngLat | null>((resolve, reject) => {\n\n    if(!window.navigator.geolocation || !window.navigator.geolocation.getCurrentPosition) {\n      resolve(null)\n    }\n\n    window.navigator.geolocation.getCurrentPosition(\n      (pos) => {\n        const lat = pos.coords.latitude\n        const lng = pos.coords.longitude\n        resolve([lng, lat])\n      },\n      (error) => {\n        resolve(null)\n      },\n      {\n        enableHighAccuracy: true,\n        timeout: 5000,\n        maximumAge: 0\n      }\n    )\n  })\n}\n","import './AboutUs.scss'\n\nconst Content = () => {\n  return (\n    <div className=\"about-us\">\n      <div className=\"container\">\n        <div className=\"branding\">\n          <div className=\"image\"><img src={`${process.env.PUBLIC_URL}/assets/logo.png`} alt=\"\"/></div>\n          <div className=\"logo\">GoVote KAWASAKIマップ</div>\n        </div>\n\n        <h2>さそいあって選挙にいこう！</h2>\n        <p>\n          投票行動を川崎市民が身近に楽しめるムーブメントにしたい！と願う川崎市内の団体・組織・企業が集まって「GoVote KAWASAKI」を立ち上げました。\n        </p>\n        <p>\n          「GoVote KAWASAKI」を合言葉に投票をリアルやSNS上（Twitter / Instagram / Facebook）で呼びかけるほか、ポスター、ステッカー、Zoom背景、のデータを公式サイトで無料配布します。\n          ぜひ、#GoVoteKAWASAKi のハッシュタグをつけて、発信してください！\n        </p>\n\n        <h2>About GoVote KAWASAKI</h2>\n        <p>\n          GoVote KAWASAKI は川崎市民に投票を促す市民による活動です。\n        </p>\n        <p>\n          『Go Vote KAWASAKI』を合言葉に、ステッカー、ポスター、Zoom背景を無料配布するほか、市内の飲食店やサービス業のみなさんとともに投票へ行こう！の輪を広げていきます。\n        </p>\n\n        <h2>関連サイト</h2>\n        <p>\n          <ul>\n            <li><a href=\"https://www.govote-kawasaki.jp/\" target='_blank' rel=\"noreferrer\">公式サイト</a></li>\n            <li><a href=\"https://twitter.com/kawasaki_vote\" target='_blank' rel=\"noreferrer\">Twitter</a></li>\n            <li><a href=\"https://www.facebook.com/govote.kawasaki\" target='_blank' rel=\"noreferrer\">Facebook</a></li>\n            <li><a href=\"https://www.instagram.com/govote.kawasaki/?hl=ja\" target='_blank' rel=\"noreferrer\">Instagram</a></li>\n          </ul>\n        </p>\n        ※ 詳しいことは公式サイトをご覧ください。\n        ※ 問い合わせメール：info[at]govote-kawasaki.jp  [at]を@マークに置き換えてください。\n\n        <h2>About Geolonia PWAマップ</h2>\n        <p>\n          このアプリは、株式会社Geoloniaの「<a href=\"https://github.com/geoloniamaps/pwamap\" target='_blank' rel=\"noreferrer\">Geolonia PWAマップ</a>」を使用して作成されています。\n        </p>\n\n      </div>\n\n    </div>\n  );\n};\n\nexport default Content;\n","import React from \"react\";\nimport Select from 'react-select'\nimport { useNavigate } from 'react-router-dom';\nimport './Category.scss'\n\ntype Props = {\n  data: Pwamap.ShopData[];\n}\n\nconst Content = (props: Props) => {\n\n  const navigate = useNavigate();\n\n  const [categoryList, setCategoryList] = React.useState<string[]>([]);\n\n  React.useEffect(() => {\n\n    let categories: string[] = []\n\n    for (let i = 0; i < props.data.length; i++) {\n      const shop = props.data[i];\n\n      if (categories.indexOf(shop['カテゴリ']) === -1) {\n\n        categories.push(shop['カテゴリ'])\n      }\n\n    }\n\n    setCategoryList(categories)\n\n  }, [props.data])\n\n\n  return (\n    <>\n      <div className=\"head\"></div>\n      <div className=\"category\">\n        <div className=\"container\">\n          <div className=\"category-item\">\n            <label htmlFor=\"category-select\">カテゴリから選ぶ</label>\n            <Select\n              onChange={(e) => {\n                if (e) {\n                  navigate(`/list?category=${e.value}`);\n                }\n              }}\n              options={\n                categoryList.map(category => {\n                  return {\n                    value: category,\n                    label: category\n                  }\n                })\n              }\n            />\n          </div>\n\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default Content;\n","import { useEffect, useState } from 'react'\nimport { ImageList, ImageListItem } from '@material-ui/core'\nimport Shop from './Shop'\nimport './Images.scss'\n\ntype Props = {\n  data: Pwamap.ShopData[];\n}\n\nconst Content = (props: Props) => {\n\n  const { data } = props;\n  const [validImageList, setValidImageList ] = useState<JSX.Element[]>([]);\n  const [shop, setShop] = useState<Pwamap.ShopData | undefined>()\n\n  const popupHandler = (shop: Pwamap.ShopData) => {\n    if (shop) {\n      setShop(shop)\n    }\n  }\n\n  const closeHandler = () => {\n    setShop(undefined)\n  }\n\n  useEffect(() => {\n\n    let imageListItems = []\n\n    for (let i = 0; i < data.length; i++) {\n      const item = data[i];\n\n      if (item['画像']) {\n\n        imageListItems.push(\n          <ImageListItem\n            key={i}\n            className=\"mui-image-list-item\"\n          >\n            <img\n              src={item['画像']}\n              alt={item['スポット名']}\n              loading=\"lazy\"\n              onClick={() => popupHandler(item)}\n              onError={e => {\n                //@ts-ignore\n                e.target.parentNode.remove()\n              }}\n            />\n          </ImageListItem>\n        )\n      }\n    }\n\n    setValidImageList(imageListItems)\n\n  }, [data])\n\n  return (\n    <>\n      <div className=\"head\">\n        <span className=\"head_text\">センキョ割実施店舗</span>\n      </div>\n      <div className=\"images\">\n        <div className=\"container\">\n          <ImageList id=\"mui-image-list\" sx={{ width: \"100%\", height: \"100%\" }} cols={2} rowHeight={164}>\n            {validImageList}\n          </ImageList>\n          {shop ?\n            <Shop shop={shop} close={closeHandler} />\n            :\n            <></>\n          }\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default Content;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport './Tabbar.scss'\n\nimport { FaList, FaHome, FaSearch, FaCamera } from \"react-icons/fa\"\nimport { AiOutlineAppstore } from \"react-icons/ai\"\n\nconst Content = () => {\n  return (\n    <div className=\"tabbar\">\n      <ul>\n        <li><Link to=\"/\"><div className=\"icon\"><FaHome /></div><div className=\"text\">ホーム</div></Link></li>\n        <li><Link to=\"/list\"><div className=\"icon\"><FaList /></div><div className=\"text\">一覧</div></Link></li>\n        <li><Link to=\"/category\"><div className=\"icon\"><FaSearch /></div><div className=\"text\">カテゴリ</div></Link></li>\n        <li><Link to=\"/images\"><div className=\"icon\"><FaCamera /></div><div className=\"text\">センキョ割</div></Link></li>\n        <li><Link to=\"/about\"><div className=\"icon\"><AiOutlineAppstore /></div><div className=\"text\">マップについて</div></Link></li>\n      </ul>\n    </div>\n  );\n};\n\nexport default Content;\n","const zen2han = (str: string) => {\n  return str.replace(/[！-～]/g, function (s: string) {\n    return String.fromCharCode(s.charCodeAt(0) - 0xFEE0);\n  }).replace(/　/g, ' ');\n}\n\nexport default zen2han;\n","import zen2han from \"./zen2han\";\n\nconst table2json = (table: Array<Array<string>>) => {\n  const header = table[0]\n  const records = table.slice(1)\n\n  return records.map((record: Array<string>) => {\n\n    const properties = header.reduce((prev: any, column: any) => {\n      const value = record[header.indexOf(column)];\n      prev[column] = zen2han(value || '');\n      return prev;\n    }, {});\n    return properties;\n  });\n\n}\n\nexport default table2json;\n","import React from \"react\";\nimport { Routes, Route } from \"react-router-dom\";\nimport \"./App.scss\";\n\nimport Home from './App/Home'\nimport List from './App/List'\nimport AboutUs from './App/AboutUs'\nimport Category from './App/Category'\nimport Images from './App/Images'\n\nimport Tabbar from './App/Tabbar'\nimport table2json from \"./lib/table2json\";\n\n// You can see config.json after running `npm start` or `npm run build`\n// import config from './config.json'\n\n\nconst sortShopList = async (shopList: Pwamap.ShopData[]) => {\n\n  // 新着順にソート\n  return shopList.sort(function (item1, item2) {\n    return Date.parse(item2['タイムスタンプ']) - Date.parse(item1['タイムスタンプ'])\n  });\n\n}\n\nconst App = () => {\n  const [shopList, setShopList] = React.useState<Pwamap.ShopData[]>([])\n\n  React.useEffect(() => {\n    fetch(`${process.env.PUBLIC_URL}/data.json?timestamp=${new Date().getTime()}`)\n      .then((response) => {\n        return response.ok ? response.text() : Promise.reject(response.status);\n      })\n      .then((fetchedData) => {\n\n        const data = JSON.parse(fetchedData)\n\n        if ('values' in data === false) {\n          console.log(\"No Data Found at Spreadsheet\")\n          setShopList([])\n          return\n        }\n\n        let features = table2json(data.values);\n\n        const nextShopList: Pwamap.ShopData[] = []\n        for (let i = 0; i < features.length; i++) {\n          const feature = features[i] as Pwamap.ShopData\n\n          if (!feature['緯度'] || !feature['経度'] || !feature['スポット名']) {\n            continue;\n          }\n          if (!feature['緯度'].match(/^-?[0-9]+(\\.[0-9]+)?$/)) {\n            continue\n          }\n          if (!feature['経度'].match(/^-?[0-9]+(\\.[0-9]+)?$/)) {\n            continue\n          }\n\n          const shop = {\n            ...feature,\n            index: i\n          }\n\n          nextShopList.push(shop)\n        }\n\n        sortShopList(nextShopList).then((sortedShopList) => {\n          setShopList(sortedShopList)\n        })\n\n      });\n  }, [])\n\n  return (\n    <div className=\"app\">\n      <div className=\"app-body\">\n        <Routes>\n          <Route path=\"/\" element={<Home data={shopList} />} />\n          <Route path=\"/list\" element={<List data={shopList} />} />\n          <Route path=\"/category\" element={<Category data={shopList} />} />\n          <Route path=\"/images\" element={<Images data={shopList} />} />\n          <Route path=\"/about\" element={<AboutUs />} />\n        </Routes>\n      </div>\n      <div className=\"app-footer\">\n        <Tabbar />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import { useQRCode } from 'next-qrcode';\n\nfunction Qrcode(props: { url: string }) {\n\n  const { url } = props;\n  const { Canvas } = useQRCode();\n\n  return (\n    <Canvas\n      text={url}\n      options={{\n        type: 'image/png',\n        margin: 0,\n        width: 128\n      }}\n    />\n  );\n}\n\nexport default Qrcode;\n","import React from \"react\";\nimport './About.scss'\nimport Qrcode from './Qrcode'\n// import Share from './App/Share'\nimport config from './config.json'\n\nconst Content = () => {\n\n  const logoUrl = config.logo_image_url || `${process.env.PUBLIC_URL}/logo.svg`\n\n  /*\n  return (\n    <div className=\"about\">\n      <div className=\"branding\">\n        <img className=\"image\" src={logoUrl} alt=\"\"/>\n      </div>\n\n      <div className=\"description\">{config.description}</div>\n      <div className=\"qrcode\"><Qrcode url={window.location.href}/></div>\n      <Share />\n    </div>\n  );\n  */\n  return (\n    <div className=\"about\">\n      <div className=\"branding\">\n        <img className=\"image\" src={logoUrl} alt=\"\"/>\n      </div>\n\n      <div className=\"description\">{config.description}</div>\n      <div className=\"qrcode\"><Qrcode url={window.location.href}/></div>\n    </div>\n  );\n};\n\nexport default Content;\n","import React from \"react\";\n\nimport App from './App'\nimport About from './About'\nimport './Container.scss'\n\nfunction Content() {\n  return (\n    <div className=\"outer-container\">\n      <div className=\"inner-container\">\n        <About />\n        <App />\n      </div>\n    </div>\n  );\n}\n\nexport default Content;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { HashRouter } from \"react-router-dom\";\nimport Container from './Container';\nimport './index.scss'\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\n\nReactDOM.render(\n  <React.StrictMode>\n    <HashRouter>\n      <Container />\n    </HashRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n\nserviceWorkerRegistration.register();\n"],"sourceRoot":""}